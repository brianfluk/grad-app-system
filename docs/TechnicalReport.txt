Technical Product Report

During this phase, we built our application from scratch and added as much functionality as possible. The backend is built on nodeJS using express, and frontend is built on React. Due to the time constraints of this phase, we first focused on designing a simple and effective user interface. We then created our server with mock data and hooked it to the frontend. Our end product is somewhat in line with our expectations set 12 days ago upon starting. We were hoping to make the app fully functional, but there are some smaller areas such as button clicks, which were not all implemented.

Our biggest challenge this semester, besides the group environment, was our inexperience in React. This project was our introduction to the technology. A specific case of this, was loading the appropriate view based on the type of user. For example, in our GAPF view, we set the user type in the state. Then upon rendering, we had cases for all the user roles that loaded the appropriate component for the current role of the user logged in. Another area we struggled with, was the documentation for React. As beginners, we struggled to find clear, concise documentation which made for a steep learning curve. Something we picked up fairly quickly and found to be much more efficient in React, were components. For example, we made a navigation bar component which we used throughout the site. The ability to compartmentalize our code and have the ability to reuse these components in <OneWord /> was much appreciated, as opposed to repeating code throughout the application.  

A lesson learned in this project were the challenges of working as a team using a framework that no one had any experience with. In hindsight, a different approach should have been taken, such having serious discussions and consideration whether the team can undertake this challenge, and if so, laying out a concise plan. 

For the current state of our application, all the roles have been defined and the app behaves appropriately based on the role of the user logged in. The application has two main parts to it, tickets and gapf.  Faculty members are able to request and view the status of their tickets. They can also view and submit their GAPF. The associate graduate can view tickets and approve tickets. The Grad Office Staff can send offers and process responses, as well as view GAPF applications and their status. The budget director is able to grant and edit domestic and international tickets to faculty members. They can also view all the tickets of faculty members, and their GAPF applications. 